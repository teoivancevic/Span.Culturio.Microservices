using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Span.Culturio.Microservices.Users.Migrations
{
    public partial class AddSeedData : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "User",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 48, 46, 5, 19, 13, 164, 61, 175, 71, 158, 192, 161, 158, 250, 14, 38, 51, 183, 158, 80, 207, 132, 3, 217, 197, 147, 140, 26, 153, 184, 142, 0, 110, 195, 91, 72, 103, 102, 52, 107, 241, 83, 103, 65, 193, 90, 87, 58, 243, 147, 221, 130, 244, 188, 151, 46, 125, 196, 252, 2, 172, 137, 41, 127 }, new byte[] { 51, 58, 63, 28, 239, 93, 218, 202, 140, 20, 21, 128, 12, 173, 139, 251, 49, 186, 119, 49, 12, 139, 12, 241, 11, 52, 81, 202, 129, 0, 158, 3, 51, 150, 207, 165, 45, 222, 199, 57, 240, 3, 169, 174, 18, 184, 73, 78, 7, 239, 38, 90, 132, 50, 77, 244, 243, 7, 124, 73, 111, 66, 194, 207, 126, 24, 223, 208, 242, 198, 193, 41, 121, 80, 59, 215, 198, 118, 36, 236, 19, 179, 168, 29, 58, 14, 182, 171, 12, 132, 23, 42, 22, 172, 151, 224, 216, 206, 68, 221, 181, 218, 66, 207, 16, 41, 43, 190, 16, 245, 201, 225, 212, 217, 1, 129, 63, 2, 62, 210, 233, 218, 207, 168, 167, 127, 228, 87 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "User",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 175, 226, 75, 100, 144, 142, 52, 78, 83, 36, 78, 1, 9, 17, 206, 210, 23, 124, 197, 21, 240, 212, 49, 16, 186, 100, 70, 184, 8, 39, 146, 183, 129, 253, 202, 226, 131, 191, 13, 138, 195, 197, 179, 231, 89, 44, 154, 44, 12, 221, 192, 20, 121, 161, 136, 197, 45, 161, 138, 196, 180, 127, 229, 251 }, new byte[] { 100, 4, 197, 56, 237, 197, 190, 138, 49, 74, 66, 219, 193, 224, 96, 105, 142, 91, 229, 12, 119, 142, 246, 49, 99, 190, 39, 67, 45, 53, 62, 176, 226, 133, 231, 68, 133, 156, 100, 74, 174, 110, 216, 159, 145, 36, 157, 41, 181, 158, 47, 227, 93, 73, 201, 184, 172, 120, 106, 153, 241, 117, 19, 13, 184, 33, 108, 62, 204, 69, 135, 210, 196, 171, 244, 62, 108, 62, 35, 55, 216, 74, 136, 107, 56, 50, 123, 69, 127, 130, 82, 204, 213, 59, 174, 220, 156, 77, 166, 245, 192, 198, 85, 228, 22, 183, 166, 75, 96, 111, 173, 90, 20, 172, 193, 206, 70, 190, 118, 144, 172, 215, 239, 173, 159, 222, 164, 151 } });
        }
    }
}
