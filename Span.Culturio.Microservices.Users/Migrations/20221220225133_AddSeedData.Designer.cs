// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Span.Culturio.Microservices.Users.Data;

#nullable disable

namespace Span.Culturio.Microservices.Users.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221220225133_AddSeedData")]
    partial class AddSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Span.Culturio.Microservices.Users.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@culturio.eu",
                            FirstName = "Admin",
                            LastName = "User",
                            PasswordHash = new byte[] { 48, 46, 5, 19, 13, 164, 61, 175, 71, 158, 192, 161, 158, 250, 14, 38, 51, 183, 158, 80, 207, 132, 3, 217, 197, 147, 140, 26, 153, 184, 142, 0, 110, 195, 91, 72, 103, 102, 52, 107, 241, 83, 103, 65, 193, 90, 87, 58, 243, 147, 221, 130, 244, 188, 151, 46, 125, 196, 252, 2, 172, 137, 41, 127 },
                            PasswordSalt = new byte[] { 51, 58, 63, 28, 239, 93, 218, 202, 140, 20, 21, 128, 12, 173, 139, 251, 49, 186, 119, 49, 12, 139, 12, 241, 11, 52, 81, 202, 129, 0, 158, 3, 51, 150, 207, 165, 45, 222, 199, 57, 240, 3, 169, 174, 18, 184, 73, 78, 7, 239, 38, 90, 132, 50, 77, 244, 243, 7, 124, 73, 111, 66, 194, 207, 126, 24, 223, 208, 242, 198, 193, 41, 121, 80, 59, 215, 198, 118, 36, 236, 19, 179, 168, 29, 58, 14, 182, 171, 12, 132, 23, 42, 22, 172, 151, 224, 216, 206, 68, 221, 181, 218, 66, 207, 16, 41, 43, 190, 16, 245, 201, 225, 212, 217, 1, 129, 63, 2, 62, 210, 233, 218, 207, 168, 167, 127, 228, 87 },
                            Username = "sysadmin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
