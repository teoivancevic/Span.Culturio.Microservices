// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Span.Culturio.Microservices.Users.Data;

#nullable disable

namespace Span.Culturio.Microservices.Users.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221219005627_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Span.Culturio.Microservices.Users.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@culturio.eu",
                            FirstName = "Admin",
                            LastName = "User",
                            PasswordHash = new byte[] { 175, 226, 75, 100, 144, 142, 52, 78, 83, 36, 78, 1, 9, 17, 206, 210, 23, 124, 197, 21, 240, 212, 49, 16, 186, 100, 70, 184, 8, 39, 146, 183, 129, 253, 202, 226, 131, 191, 13, 138, 195, 197, 179, 231, 89, 44, 154, 44, 12, 221, 192, 20, 121, 161, 136, 197, 45, 161, 138, 196, 180, 127, 229, 251 },
                            PasswordSalt = new byte[] { 100, 4, 197, 56, 237, 197, 190, 138, 49, 74, 66, 219, 193, 224, 96, 105, 142, 91, 229, 12, 119, 142, 246, 49, 99, 190, 39, 67, 45, 53, 62, 176, 226, 133, 231, 68, 133, 156, 100, 74, 174, 110, 216, 159, 145, 36, 157, 41, 181, 158, 47, 227, 93, 73, 201, 184, 172, 120, 106, 153, 241, 117, 19, 13, 184, 33, 108, 62, 204, 69, 135, 210, 196, 171, 244, 62, 108, 62, 35, 55, 216, 74, 136, 107, 56, 50, 123, 69, 127, 130, 82, 204, 213, 59, 174, 220, 156, 77, 166, 245, 192, 198, 85, 228, 22, 183, 166, 75, 96, 111, 173, 90, 20, 172, 193, 206, 70, 190, 118, 144, 172, 215, 239, 173, 159, 222, 164, 151 },
                            Username = "sysadmin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
